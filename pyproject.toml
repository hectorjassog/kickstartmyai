[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kickstartmyai"
version = "0.1.0"
description = "ðŸš€ Generate production-ready FastAPI projects with AI capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "KickStartMyAI Contributors", email = "contact@kickstartmyai.com"}
]
maintainers = [
    {name = "KickStartMyAI Contributors", email = "contact@kickstartmyai.com"}
]
keywords = [
    "fastapi",
    "ai",
    "template",
    "generator",
    "boilerplate",
    "cookiecutter",
    "postgresql",
    "terraform",
    "aws",
    "ecs"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
]
requires-python = ">=3.9"
dependencies = [
    "cookiecutter>=2.5.0",
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/kickstartmyai/kickstartmyai"
Documentation = "https://kickstartmyai.readthedocs.io/"
Repository = "https://github.com/kickstartmyai/kickstartmyai.git"
Issues = "https://github.com/kickstartmyai/kickstartmyai/issues"
Changelog = "https://github.com/kickstartmyai/kickstartmyai/blob/main/CHANGELOG.md"

[project.scripts]
kickstartmyai = "kickstartmyai.cli.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["kickstartmyai*"]

[tool.setuptools.package-data]
kickstartmyai = ["templates/**/*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | \.pytest_cache
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kickstartmyai"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cookiecutter.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--cov=kickstartmyai",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["kickstartmyai"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
