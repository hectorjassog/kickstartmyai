{{cookiecutter.project_slug}}/
├── app/
│   ├── __init__.py
│   ├── main.py
│   ├── api/
│   │   ├── __init__.py
│   │   ├── deps.py
│   │   ├── middleware/
│   │   │   ├── __init__.py
│   │   │   ├── cors.py
│   │   │   ├── rate_limiting.py
│   │   │   ├── logging.py
│   │   │   ├── error_handling.py
│   │   │   └── security.py
│   │   └── v1/
│   │       ├── __init__.py
│   │       ├── endpoints/
│   │       │   ├── __init__.py
│   │       │   ├── base.py
│   │       │   ├── user.py
│   │       │   ├── message.py
│   │       │   └── conversation.py
│   │       └── api.py
│   ├── core/
│   │   ├── __init__.py
│   │   ├── config.py
│   │   ├── settings.py           # Project-specific settings
│   │   ├── exceptions.py
│   │   ├── logging.py
│   │   ├── events.py
│   │   └── security/
│   │       ├── __init__.py
│   │       ├── authentication.py
│   │       ├── authorization.py
│   │       ├── jwt_handler.py
│   │       ├── encryption.py
│   │       └── validators.py
│   ├── db/
│   │   ├── __init__.py
│   │   ├── base.py
│   │   ├── session.py
│   │   └── repositories/
│   │       ├── __init__.py
│   │       ├── base.py
│   │       ├── user.py
│   │       ├── conversation.py
│   │       └── agent.py
│   ├── models/
│   │   ├── __init__.py
│   │   ├── user.py
│   │   ├── conversation.py
│   │   ├── message.py
│   │   ├── agent.py
│   │   └── execution.py
│   ├── schemas/
│   │   ├── __init__.py
│   │   ├── user.py
│   │   ├── conversation.py
│   │   ├── message.py
│   │   ├── agent.py
│   │   └── execution.py
│   ├── crud/
│   │   ├── __init__.py
│   │   ├── user.py
│   │   ├── conversation.py
│   │   ├── message.py
│   │   ├── agent.py
│   │   └── execution.py
│   ├── ai/
│   │   ├── __init__.py
│   │   ├── core/
│   │   │   ├── __init__.py
│   │   │   ├── agent.py
│   │   │   ├── orchestrator.py
│   │   │   ├── executor.py
│   │   │   └── memory.py
│   │   ├── tools/
│   │   │   ├── __init__.py
│   │   │   ├── base.py
│   │   │   ├── web_search.py
│   │   │   ├── code_executor.py
│   │   │   ├── file_manager.py
│   │   │   └── database.py
│   │   ├── prompts/
│   │   │   ├── __init__.py
│   │   │   ├── system.py
│   │   │   └── templates.py
│   │   ├── providers/
│   │   │   ├── __init__.py
│   │   │   ├── base.py
│   │   │   ├── openai.py
│   │   │   ├── anthropic.py
│   │   │   ├── gemini.py
│   │   │   └── factory.py
│   │   └── services/
│   │       ├── __init__.py
│   │       ├── llm_service.py
│   │       ├── chat_service.py
│   │       ├── completion_service.py
│   │       ├── embedding_service.py
│   │       ├── function_calling_service.py
│   │       └── streaming_service.py
│   ├── monitoring/
│   │   ├── __init__.py
│   │   ├── health_checks.py
│   │   └── metrics.py
│   ├── telemetry/
│   │   ├── __init__.py
│   │   └── events.py
│   └── services/
│       ├── __init__.py
│       ├── agent_service.py
│       ├── conversation_service.py
│       └── tool_service.py
├── terraform/
│   ├── environments/
│   │   ├── dev/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   ├── outputs.tf
│   │   │   └── terraform.tfvars.example
│   │   ├── staging/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   ├── outputs.tf
│   │   │   └── terraform.tfvars.example
│   │   └── prod/
│   │       ├── main.tf
│   │       ├── variables.tf
│   │       ├── outputs.tf
│   │       └── terraform.tfvars.example
│   ├── modules/
│   │   ├── networking/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   └── outputs.tf
│   │   ├── database/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   └── outputs.tf
│   │   ├── ecs/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   └── outputs.tf
│   │   ├── alb/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   └── outputs.tf
│   │   ├── redis/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   └── outputs.tf
│   │   ├── cloudwatch/
│   │   │   ├── main.tf
│   │   │   ├── variables.tf
│   │   │   └── outputs.tf
│   │   └── secrets/
│   │       ├── main.tf
│   │       ├── variables.tf
│   │       └── outputs.tf
│   ├── shared/
│   │   ├── data.tf           # Common data sources
│   │   ├── locals.tf         # Common locals
│   │   └── versions.tf       # Terraform and provider versions
│   └── README.md
├── scripts/
│   ├── README.md             # Scripts documentation
│   ├── development/
│   │   ├── setup-dev.sh      # Development environment setup
│   │   ├── start-dev.sh      # Start development server
│   │   ├── reset-db.sh       # Reset development database
│   │   └── seed-data.py      # Seed development data
│   ├── database/
│   │   ├── create_db.py      # Create database and user
│   │   ├── drop_db.py        # Drop database
│   │   ├── reset_db.py       # Drop and recreate database
│   │   ├── migrate.py        # Database migration runner
│   │   ├── seed_data.py      # Seed initial/test data
│   │   ├── backup.sh         # Database backup
│   │   ├── restore.sh        # Database restore
│   │   └── health-check.py   # Database health check
│   ├── deployment/
│   │   ├── build.sh          # Build application
│   │   ├── deploy.sh         # Deployment script
│   │   ├── rollback.sh       # Rollback deployment
│   │   └── health-check.sh   # Application health check
│   ├── infrastructure/
│   │   ├── tf-init.sh        # Terraform initialization
│   │   ├── tf-plan.sh        # Terraform plan
│   │   ├── tf-apply.sh       # Terraform apply
│   │   ├── tf-destroy.sh     # Terraform destroy
│   │   └── tf-format.sh      # Terraform format
│   └── utilities/
│       ├── cleanup.sh        # Cleanup temporary files
│       └── logs.sh           # Log aggregation
├── tests/
│   ├── __init__.py
│   ├── conftest.py
│   ├── fixtures/
│   │   ├── __init__.py
│   │   ├── database.py
│   │   ├── auth.py
│   │   └── mock_data.py
│   ├── factories/
│   │   ├── __init__.py
│   │   ├── user.py
│   │   ├── conversation.py
│   │   └── agent.py
│   ├── unit/
│   │   ├── __init__.py
│   │   ├── test_crud/
│   │   │   ├── __init__.py
│   │   │   ├── test_user.py
│   │   │   ├── test_conversation.py
│   │   │   └── test_agent.py
│   │   ├── test_services/
│   │   │   ├── __init__.py
│   │   │   ├── test_agent_service.py
│   │   │   └── test_conversation_service.py
│   │   ├── test_ai/
│   │   │   ├── __init__.py
│   │   │   ├── test_tools/
│   │   │   │   ├── __init__.py
│   │   │   │   ├── test_web_search.py
│   │   │   │   └── test_code_executor.py
│   │   │   ├── test_orchestrator.py
│   │   │   └── test_agent.py
│   │   └── test_utils/
│   │       ├── __init__.py
│   │       └── test_helpers.py
│   ├── integration/
│   │   ├── __init__.py
│   │   ├── test_api/
│   │   │   ├── __init__.py
│   │   │   ├── test_auth.py
│   │   │   ├── test_users.py
│   │   │   └── test_agents.py
│   │   ├── test_database/
│   │   │   ├── __init__.py
│   │   │   └── test_migrations.py
│   │   └── test_ai_workflow/
│   │       ├── __init__.py
│   │       └── test_agent_execution.py
│   ├── e2e/
│   │   ├── __init__.py
│   │   ├── test_user_journey.py
│   │   └── test_agent_conversation.py
│   ├── load/
│   │   ├── __init__.py
│   │   └── locustfile.py     # Load testing with Locust
├── docker/
│   ├── Dockerfile.dev        # Development Dockerfile
│   ├── Dockerfile.prod       # Production Dockerfile for ECS
│   ├── docker-compose.yml    # Development environment
│   ├── docker-compose.prod.yml # Production environment
│   └── task-definition.json  # ECS Task Definition
├── docs/
│   ├── api/
│   │   ├── authentication.md
│   │   ├── endpoints.md
│   │   └── examples.md
│   ├── deployment/
│   │   ├── ecs.md
│   │   ├── terraform.md
│   │   └── monitoring.md
│   ├── development/
│   │   ├── setup.md
│   │   ├── testing.md
│   │   └── contributing.md
│   └── architecture/
│       ├── overview.md
│       ├── database.md
│       └── security.md
├── .github/
│   └── workflows/
│       ├── ci.yml            # Continuous Integration
│       ├── cd.yml            # Continuous Deployment to ECS
│       └── terraform.yml     # Infrastructure CI/CD
├── requirements.txt
├── requirements-dev.txt      # Development dependencies
├── alembic/                  # Database migrations
│   ├── versions/
│   ├── env.py
│   ├── script.py.mako
│   └── alembic.ini
├── .env.example
├── .env.template                 # Template with project variables
├── project.yaml                  # Project configuration template
├── .gitignore
├── .dockerignore
├── .pre-commit-config.yaml
├── pyproject.toml
├── README.md
└── Makefile